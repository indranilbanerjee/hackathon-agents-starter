"use strict";(()=>{var e={};e.id=529,e.ids=[529],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},7561:e=>{e.exports=require("node:fs")},3826:(e,t,s)=>{s.r(t),s.d(t,{originalPathname:()=>f,patchFetch:()=>x,requestAsyncStorage:()=>g,routeModule:()=>c,serverHooks:()=>h,staticGenerationAsyncStorage:()=>m});var a={};s.r(a),s.d(a,{GET:()=>d,POST:()=>l});var n=s(9303),r=s(8716),o=s(670),i=s(7070),u=s(8391),p=s(5925);async function d(e){try{let{searchParams:t}=new URL(e.url),s=t.get("category"),a=t.get("status"),n=t.get("agent");if(n){let e=(0,u.hx)(n);if(!e)return i.NextResponse.json({error:`Agent '${n}' not found`},{status:404});return i.NextResponse.json({agent:e,dataPath:`/api/agents/${n}/data`,apiEndpoint:e.apiRoute,documentation:`/docs/agents/${e.dayFolder.toLowerCase().replace(/_/g,"-")}.md`})}let r=Object.values(u.B6);s&&(r=(0,u.du)(s)),a&&(r=r.filter(e=>e.status===a));let o={total:Object.keys(u.B6).length,implemented:(0,u.Rl)().length,planned:(0,u.Oe)().length,categories:(0,u.CP)()};return i.NextResponse.json({agents:r,stats:o,endpoints:{getAgent:"/api/agents?agent={agentId}",getAgentData:"/api/agents/{agentId}/data",filterByCategory:"/api/agents?category={category}",filterByStatus:"/api/agents?status={status}"}})}catch(e){return console.error("Agents API Error:",e),i.NextResponse.json({error:"Failed to fetch agents"},{status:500})}}async function l(e){try{let{action:t,agentId:s,config:a}=await e.json();switch(t){case"validate":let n=(0,u.hx)(s);if(!n)return i.NextResponse.json({valid:!1,error:`Agent '${s}' not found`},{status:404});let r=await (0,p.jo)(s),o=Object.entries(r).map(([e,t])=>({filename:e,exists:t.success,source:t.source}));return i.NextResponse.json({valid:!0,agent:n,dataStatus:o,recommendations:function(e,t){let s=[];"planned"===e.status&&(s.push(`Implement API route at ${e.apiRoute}`),s.push(`Create comprehensive tests for ${e.name}`));let a=t.filter(e=>!e.exists);return a.length>0&&s.push(`Add demo data files: ${a.map(e=>e.filename).join(", ")}`),s.push(`Review documentation at /docs/agents/${e.dayFolder.toLowerCase().replace(/_/g,"-")}.md`),e.complexity>=4&&(s.push("Consider implementing ML/AI components for enhanced functionality"),s.push("Add comprehensive error handling and fallback mechanisms")),e.complexity>=5&&(s.push("Implement advanced analytics and reporting features"),s.push("Add real-time monitoring and alerting capabilities")),s}(n,o)});case"test":let d=await (0,p.jo)(s);return i.NextResponse.json({agentId:s,testData:d,timestamp:new Date().toISOString(),status:"success"});default:return i.NextResponse.json({error:`Unknown action: ${t}`},{status:400})}}catch(e){return console.error("Agents API POST Error:",e),i.NextResponse.json({error:"Failed to process request"},{status:500})}}let c=new n.AppRouteRouteModule({definition:{kind:r.x.APP_ROUTE,page:"/api/agents/route",pathname:"/api/agents",filename:"route",bundlePath:"app/api/agents/route"},resolvedPagePath:"C:\\Users\\indra\\Downloads\\agents-starter-repo\\agents-starter-repo\\app\\api\\agents\\route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:g,staticGenerationAsyncStorage:m,serverHooks:h}=c,f="/api/agents/route";function x(){return(0,o.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:m})}}};var t=require("../../../webpack-runtime.js");t.C(e);var s=e=>t(t.s=e),a=t.X(0,[789,925],()=>s(3826));module.exports=a})();